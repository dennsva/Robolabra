package robotti;

import lejos.nxt.*;

/**
 * Example leJOS Project with an ant build file
 *
 */

/**
Ohjelmassa on ensin toiminnallisuus kynän korkeuden hienosäätöön, jotta piirturi toimii tarkoituksenmukaisesti. (metodi asetaKorkeus)
Tämän jälkeen piirturia on mahdollista käyttää manuaalisesti nappien sekä kosketussensorien avulla.
En löytänyt tapaa poistaa listeneria moottorista A, joten deaktivoin sen booleanin moottoriA avulla.
 */
public class Robotti {

	static boolean moottoriA;
	
	public static void main(String[] args) {
		//alas = A forward
		//vasemmalle = B forward
		Motor.B.setSpeed(90);
		Motor.C.setSpeed(90);
		asetaKorkeus();
		
		Button.LEFT.addButtonListener(new ButtonListener() {
			public void buttonPressed(Button b) {
				Motor.B.rotate(360);
			}
		});
		
		/*
		
		//piirturin siirtäminen vasemmalle
		Button.LEFT.addButtonListener(new ButtonListener() {
			public void buttonPressed(Button b) {
				Motor.B.forward();
			}
			
			public void buttonReleased(Button b) {
				Motor.B.stop();
			}
		});
		
		//piirturin siirtäminen oikealle
		Button.RIGHT.addButtonListener(new ButtonListener() {
			public void buttonPressed(Button b) {
				Motor.B.backward();
			}
			
			public void buttonReleased(Button b) {
				Motor.B.stop();
			}
		});
		
		//kynän siirtäminen eteen
		SensorPort.S1.addSensorPortListener(new SensorPortListener() {
			public void stateChanged(SensorPort p, int i, int f) {
				TouchSensor sensor = new TouchSensor(p);
				if (sensor.isPressed()) {
					Motor.C.forward();
				} else {
					Motor.C.stop();
				}
			}
		});
		
		//kynän siirtäminen taakse
		SensorPort.S2.addSensorPortListener(new SensorPortListener() {
			public void stateChanged(SensorPort p, int i, int f) {
				TouchSensor sensor = new TouchSensor(p);
				if (sensor.isPressed()) {
					Motor.C.backward();
				} else {
					Motor.C.stop();
				}
			}
		});
		
		*/
		
		Button.ESCAPE.waitForPressAndRelease();
		Motor.B.rotateTo(0);
		Motor.C.rotateTo(0);
	}
	
	public static void asetaKorkeus() {
		moottoriA = true;
		System.out.println("Aseta kynän korkeus ja paina enter");
		
		//kynän siirtäminen alaspäin
		SensorPort.S1.addSensorPortListener(new SensorPortListener() {
			public void stateChanged(SensorPort p, int i, int f) {
				TouchSensor sensor = new TouchSensor(p);
				if (sensor.isPressed() && moottoriA) {
					Motor.A.forward();
				} else {
					Motor.A.stop();
				}
			}
		});
		
		//kynän siirtäminen ylöspäin
		SensorPort.S2.addSensorPortListener(new SensorPortListener() {
			public void stateChanged(SensorPort p, int i, int f) {
				TouchSensor sensor = new TouchSensor(p);
				if (sensor.isPressed() && moottoriA) {
					Motor.A.backward();
				} else {
					Motor.A.stop();
				}
			}
		});
		
		Button.ENTER.waitForPressAndRelease();
		moottoriA = false;
		SensorPort.S1.reset();
		SensorPort.S2.reset();
		LCD.clear();

	}
}
